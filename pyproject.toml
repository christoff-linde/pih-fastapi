[tool.poetry]
name = "pih-fastapi"
version = "0.1.0"
description = ""
authors = ["christoff-linde <christoff.linde@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
fastapi = "^0.104.1"
pydantic = "^2.4.2"
alembic = "^1.12.1"
psycopg2 = "^2.9.9"
SQLAlchemy = "^2.0.22"
uvicorn = "^0.23.2"
httpx = "^0.25.0"
pydantic-settings = "^2.0.3"

[tool.poetry.group.dev.dependencies]
black = "^24.3.0"
coverage = "^7.3.2"
flake8 = "^6.1.0"
isort = "^5.12.0"
pre-commit = "^3.5.0"
pyinstrument = "^4.6.0"
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
python-dotenv = "^1.0.0"
ruff = "^0.1.3"
memray = "^1.10.0"
ipykernel = "^6.26.0"
numpy = "^1.26.1"
pandas = "^2.1.2"
plotly = "^5.18.0"
nbformat = "^5.9.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Include all Python files and Pyright configuration files.
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]

# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]
# Same as Black.
line-length = 88

# Assume Python 3.11.
target-version = "py311"

[tool.ruff.lint]
# Enable for selected rules
select = [
  "A",    # flake8-builtins
  "B",    # flake8-bugbear
  "C",    # conventions
  "C4",   # flake8-comprehensions
  "C9",   # mccabe-complexity
  "D",    # pydocstyle
  "E",    # pycodestyle
  "F",    # pyflakes
  "G",    # flake8-logging-format
  "N",    # pep8-naming
  "PL",   # pylint
  "PERF", # flake8-performance
  "RSE",  # flake8-raise
  "RET",  # flake8-return
  "RUF",  # refurb
  "S",    # flake8-bandit
  "SIM",  # flake8-simplify
  "TCH",  # flake8-type-checking
  "T20",  # flake8-print
  "W",    # pycodestyle
]

ignore = ["B008", "D101", "D103", "D104", "D203", "D211", "D213", "E203"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 10.
max-complexity = 10

[tool.ruff.pylint]
max-args = 6
